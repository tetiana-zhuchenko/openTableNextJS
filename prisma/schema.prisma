generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PRICE {
  CHEAP
  REGULAR
  EXPENSIVE
}

model Restaurant {
  id          Int                  @id @default(autoincrement())
  name        String
  main_image  String
  images      String[]
  description String
  open_time   String
  close_time  String
  slug        String               @unique
  price       PRICE
  location_id Int
  cuisine_id  Int
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  items       Item[]
  cuisine     Cuisine              @relation(fields: [cuisine_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  location    Location             @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews     Review[]
  tables      Table[]
}

model Item {
  id            Int        @id @default(autoincrement())
  name          String
  price         String
  description   String
  restaurant_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Location {
  id          Int          @id @default(autoincrement())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  restaurants Restaurant[]
}

model Cuisine {
  id          Int          @id @default(autoincrement())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  restaurants Restaurant[]
}

model User {
  id         Int      @id @default(autoincrement())
  first_name String
  last_name  String
  email      String   @unique
  phone      String
  city       String
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  reviews    Review[]
}

model Review {
  id            Int        @id @default(autoincrement())
  first_name    String
  last_name     String
  text          String
  rating        Int
  restaurant_id Int
  user_id       Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          User       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Table {
  id            Int        @id @default(autoincrement())
  seats         Int
  restaurant_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
